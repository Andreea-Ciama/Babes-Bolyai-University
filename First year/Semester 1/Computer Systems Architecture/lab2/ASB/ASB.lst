     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 05                          a db 5
    14 00000001 08                          b db 8
    15 00000002 01                          c db 1
    16 00000003 09                          d db 9
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; a+13-c+d-7+b from additions, substractions, all variables as bytes
    22                                          
    23 00000000 A0[00000000]                    mov AL, [a]  ;AL= a
    24 00000005 040D                            add AL, 13   ;Al= a+13
    25 00000007 2A05[02000000]                  sub AL, [c]  ;AL= a+13-c      
    26 0000000D 0205[03000000]                  add AL, [d]  ;AL= a+13-c+d
    27 00000013 2C07                            sub AL, 7    ;AL= a+13-c+d-7
    28 00000015 0205[01000000]                  add AL, [b]  ;AL= a+13-c+d-7+b
    29                                      
    30                                          ; exit(0)
    31 0000001B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 0000001D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
