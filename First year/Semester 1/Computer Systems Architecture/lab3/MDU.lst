     1                                  ; a,b,c-byte; e-doubleword; x-qword - signed
     2                                  ; 19. (a+a+b*c*100+x)/(a+10)+e*a
     3                                  bits 32
     4                                  
     5                                  global start
     6                                  extern exit
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 F7                          a db -9h
    11 00000001 11                          b db 11h
    12 00000002 12                          c db 12h
    13 00000003 34120000                    e dd 1234h
    14 00000007 7856341200000000            x dq 12345678h
    15                                   
    16                                      
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 A0[01000000]                    mov al, byte[b]     ; al = b
    20 00000005 8A1D[02000000]                  mov bl, byte[c]     ; bl = c
    21 0000000B F6EB                            imul bl             ; ax = b*c = 132h
    22 0000000D 66BB6400                        mov bx, 100         ; bx = 100 = 64h
    23 00000011 66F7EB                          imul bx             ; eax = b*c*100 = 7788h
    24                                          ; edx:ebx = x
    25 00000014 8B1D[07000000]                  mov ebx, dword[x]
    26 0000001A 8B15[0B000000]                  mov edx, dword[x+4] 
    27                                          ; edx:ebx = b*c*100+x = 124DCE00h
    28 00000020 01C3                            add ebx, eax
    29 00000022 83D200                          adc edx, 0
    30 00000025 021D[00000000]                  add bl, byte[a]     ; edx:ebx = a+b*c*100+x = 124DCEF7Ch
    31 0000002B 021D[00000000]                  add bl, byte[a]     ; edx:ebx = a+a+b*c*100+x = 124DCEEEh
    32 00000031 89D8                            mov eax, ebx        ; edx:eax = a+a+b*c*100+x = 124DCEEEh
    33 00000033 B30A                            mov bl, 10          ; bl = 10
    34 00000035 021D[00000000]                  add bl, byte[a]     ; bl = a+10 = 1h
    35 0000003B 0FBECB                          movsx ecx, bl       ; ecx = a+10 = 1h
    36 0000003E F7F9                            idiv ecx            ; eax = (a+a+b*c*100+x)/(a+10) = 124DCEEEh
    37 00000040 89C3                            mov ebx, eax        ; ebx = (a+a+b*c*100+x)/(a+10) = 124DCEEEh
    38 00000042 A1[03000000]                    mov eax, dword[e]   ; eax = e
    39 00000047 0FBE0D[00000000]                movsx ecx, byte[a]  ; ecx = a
    40 0000004E F7E9                            imul ecx            ; edx:eax = e*a = -A3D4h = FFFF5C2Ch
    41                                          ; edx:eax = (a+a+b*c*100+x)/(a+10)+e*a = 124D2B1Ah
    42 00000050 01D8                            add eax, ebx
    43 00000052 83D200                          adc edx, 0
    44 00000055 6A00                            push dword 0
    45 00000057 FF15[00000000]                  call [exit]
